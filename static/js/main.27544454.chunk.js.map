{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","api/api.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","onAddMovie","useState","query","setQuery","setMovie","movieWasNotFound","setMovieStatus","findMovie","a","fetch","then","response","ok","Error","status","statusText","json","newMovie","Response","Title","Plot","imdbID","Poster","onSubmit","clickEvent","preventDefault","htmlFor","type","id","placeholder","onChange","handleEvent","value","target","onClick","App","data","setMovies","addMovie","useCallback","find","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27544454.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { request } from '../../api/api';\n\nexport const FindMovie = ({ onAddMovie }) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState(null);\n  const [movieWasNotFound, setMovieStatus] = useState(false);\n\n  const handleChange = (handleEvent) => {\n    const { value } = handleEvent.target;\n\n    setMovieStatus(false);\n    setQuery(value);\n  };\n\n  const findMovie = async() => {\n    const newMovie = await request(query);\n\n    if (newMovie.Response === 'False') {\n      setMovieStatus(true);\n    } else {\n      setMovie({\n        title: newMovie.Title,\n        description: newMovie.Plot,\n        imdbId: newMovie.imdbID,\n        imgUrl: newMovie.Poster,\n        imdbUrl: `https://www.imdb.com/title/${newMovie.imdbID}`,\n      });\n\n      setMovieStatus(false);\n    }\n  };\n\n  const handleSubmit = (clickEvent) => {\n    clickEvent.preventDefault();\n\n    findMovie();\n  };\n\n  const addNewMovie = () => {\n    if (!movieWasNotFound && movie) {\n      onAddMovie(movie);\n      setQuery('');\n      setMovie(null);\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              onChange={handleChange}\n            />\n          </div>\n\n          {movieWasNotFound && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-light\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={addNewMovie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {!movieWasNotFound && movie && (\n          <MovieCard\n            title={movie.title}\n            description={movie.description}\n            imgUrl={movie.imgUrl}\n            imdbUrl={movie.imdbUrl}\n          />\n        )}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  onAddMovie: PropTypes.func.isRequired,\n};\n","const BASE_URL = `https://www.omdbapi.com/?apikey=ec8f0edf`;\n\nexport function request(title) {\n  return fetch(`${BASE_URL}&t=${title}`)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n}\n","import React, { useState, useCallback } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  const addMovie = useCallback((newMovie) => {\n    if (!movies.find(movie => movie.imdbId === newMovie.imdbId)) {\n      setMovies(prevMovies => [...prevMovies, newMovie]);\n    }\n  }, [movies]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie onAddMovie={addMovie} movies={movies} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}